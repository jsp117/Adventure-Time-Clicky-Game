{"version":3,"sources":["components/Header.js","components/Image.js","components/Main.js","App.js","index.js"],"names":["Header","props","className","score","id","highscore","Image","onClick","handleClick","src","image","alt","name","Main","state","characters","correct","selected","console","log","selectedCharacter","filter","x","includes","setState","shuffle","alert","concat","holder","i","length","Math","floor","random","y","Fragment","this","map","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"yOAoBeA,MAff,SAAgBC,GACd,OACE,yBAAQC,UAAU,qCAAlB,UACE,qBAAKA,UAAU,MAAf,SACA,oBAAIA,UAAU,MAAd,0CAEA,sBAAKA,UAAU,MAAf,UACA,qBAAIA,UAAU,WAAd,oBAAiCD,EAAME,SACvC,qBAAKD,UAAU,aACf,qBAAIA,UAAU,MAAME,GAAG,YAAvB,yBAAgDH,EAAMI,oB,4BCP7CC,MAJf,SAAeL,GACX,OAAO,qBAAKC,UAAU,4BAA4BK,QAAS,kBAAMN,EAAMO,YAAYP,EAAMG,KAAlF,SAAuF,qBAAKF,UAAU,MAAMO,IAAKR,EAAMS,MAAOC,IAAKV,EAAMW,U,eCqFrIC,E,4MA/EbC,MAAQ,CACNC,WAAYA,EACZC,QAAS,EACTC,SAAU,GACVZ,UAAW,G,EAIbG,YAAc,SAAAJ,GACZ,IAAIY,EAAU,EAAKF,MAAME,QACzBE,QAAQC,IAAI,iBAAkB,EAAKL,MAAMC,YAEzC,IACIK,EADS,EAAKN,MAAMC,WAAWM,QAAO,SAAAC,GAAC,OAAIA,EAAElB,KAAOA,KACzB,GAAGQ,KAElC,GADAM,QAAQC,IAAI,qBAAsBC,GAC9B,EAAKN,MAAMG,SAASM,SAASH,GAQ/B,OAPI,EAAKN,MAAME,QAAU,EAAKF,MAAMT,WAClC,EAAKmB,SAAS,CAAEnB,UAAWW,IAG7BA,EAAU,EACV,EAAKQ,SAAS,CAAER,QAASA,EAASC,SAAU,KAC5C,EAAKQ,UACEC,MAAM,cAEbV,GAAW,GACG,EAAKF,MAAMT,WACvB,EAAKmB,SAAS,CAAEnB,UAAWW,IAGzBA,EAAU,IACZU,MAAM,YAER,EAAKF,SAAS,CAAER,QAASA,EAASC,SAAU,EAAKH,MAAMG,SAASU,OAAO,CAACP,MACxE,EAAKK,UACLP,QAAQC,IAAI,8BAA+B,EAAKL,MAAMG,UACtDC,QAAQC,IAAI,QAASH,I,EAOzBS,QAAU,WAER,IADA,IAAIG,EAAS,EAAKd,MAAMC,WACfc,EAAI,EAAGA,EAAID,EAAOE,OAAQD,IAAK,CACtC,IAAIP,EAAIS,KAAKC,MAAMD,KAAKE,SAAWJ,GAC/BK,EAAIN,EAAOC,GACfD,EAAOC,GAAKD,EAAON,GACnBM,EAAON,GAAKY,EAEd,EAAKV,SAAS,CAAET,WAAYa,K,uDAGpB,IAAD,OACP,OACE,eAAC,IAAMO,SAAP,WACE,cAAC,EAAD,CAAQhC,MAAOiC,KAAKtB,MAAME,QAASX,UAAW+B,KAAKtB,MAAMT,YAEzD,qBAAKH,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACGkC,KAAKtB,MAAMC,WAAWsB,KAAI,SAAAtB,GAAU,OACnC,cAAC,EAAD,CACEP,YAAa,EAAKA,YAClBJ,GAAIW,EAAWX,GAEfQ,KAAMG,EAAWH,KACjBF,MAAOK,EAAWL,OAFbK,EAAWX,oB,GApEfkC,IAAMC,WCIVC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCHNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.faa9395a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Header.css\";\n\n\n\nfunction Header(props) {\n  return (\n    <header className=\"header text-center container-fluid\">\n      <div className=\"row\">\n      <h1 className=\"col\">Adventure Time Clicky Game</h1>\n      </div>\n      <div className=\"row\">\n      <h4 className=\"col-sm-1\">Score: {props.score}</h4>\n      <div className=\"col-sm-9\"></div>\n      <h4 className=\"col\" id=\"highscore\">High Score: {props.highscore}</h4>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\r\n\r\n\r\nfunction Image(props) {\r\n    return <div className=\"col character text-center\" onClick={() => props.handleClick(props.id)}><img className=\"img\" src={props.image} alt={props.name}></img></div>\r\n}\r\n\r\nexport default Image;","import React from \"react\";\nimport Image from \"./Image\";\nimport \"../styles/Main.css\";\nimport Header from \"./Header\";\nimport characters from \"../assets/adventure.json\";\n// var container = document.getElementsByClassName(\"container-fluid\");\n\n\nclass Main extends React.Component {\n\n  state = {\n    characters: characters,\n    correct: 0,\n    selected: [],\n    highscore: 0\n\n  }\n\n  handleClick = id => {\n    let correct = this.state.correct;\n    console.log(\"all characters\", this.state.characters);\n    // let selectedCharacter = this.state.characters[id - 1].name;\n    let holder = this.state.characters.filter(x => x.id === id);\n    let selectedCharacter = holder[0].name;\n    console.log(\"selected character\", selectedCharacter);\n    if (this.state.selected.includes(selectedCharacter)) {\n      if (this.state.correct > this.state.highscore) {\n        this.setState({ highscore: correct });\n        // return alert(\"New High Score!\");\n      }\n      correct = 0;\n      this.setState({ correct: correct, selected: [] });\n      this.shuffle();\n      return alert(\"Game over\");\n    } else {\n      correct += 1;\n      if (correct > this.state.highscore) {\n        this.setState({ highscore: correct });\n        // return alert(\"New High Score!\");\n      }\n      if (correct > 11) {\n        alert(\"You Win!\");\n      }\n      this.setState({ correct: correct, selected: this.state.selected.concat([selectedCharacter]) });\n      this.shuffle();\n      console.log(\"already selected characters\", this.state.selected);\n      console.log(\"score\", correct);\n    }\n\n  }\n\n  // shuffle();\n\n  shuffle = () => {\n    let holder = this.state.characters;\n    for (let i = 0; i < holder.length; i++) {\n      var x = Math.floor(Math.random() * i);\n      var y = holder[i];\n      holder[i] = holder[x];\n      holder[x] = y;\n    }\n    this.setState({ characters: holder })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header score={this.state.correct} highscore={this.state.highscore} />\n\n        <div className=\"wrapper\">\n          <div className=\"container\">\n            <div className=\"text-center row\" >\n              {this.state.characters.map(characters => (\n                <Image\n                  handleClick={this.handleClick}\n                  id={characters.id}\n                  key={characters.id}\n                  name={characters.name}\n                  image={characters.image}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}